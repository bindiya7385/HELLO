// Implementation of Binary Search (Array List)

#include "iostream.h"
#include "conio.h"
#include "stdlib.h"
class LIST
{
		int *A,size;
	public:
		LIST(int);
		void SET_LIST();
		void VIEW_LIST();
		void BUBBLE_SORT();
		int BINARY_SEARCH(int);
};
LIST::LIST(int par)
{
	size=par;
	A =new int[size+1];
}
void LIST::SET_LIST()
{
	//cout<<endl<<"Enter list elements : ";
	for(int i=1;i<=size;i++)
		A[i]=random(1000);
}
void LIST::VIEW_LIST()
{
	cout<<"List elements are : ";
	for(int i=1;i<=size;i++)
		cout<<A[i]<<" ";
}
void LIST::BUBBLE_SORT()
{
	for(int i=1;i<=size-1;i++)
		for(int j=1;j<=size-i;j++)
			if(A[j] > A[j+1])
			{
				int temp = A[j];
				A[j] = A[j+1];
				A[j+1] = temp;
			}
}
int LIST::BINARY_SEARCH(int x)
{
	int low=1,high=size,mid;
	while(low<=high)
	{
		mid = (low+high)/2;
		if(A[mid] == x)
			return mid;
		else
			if(x < A[mid])
				high = mid-1;
			else
			   low = mid+1;
	}
	return 0;
}

////////////////////////////////////////////////////
void main()
{
	int n,pos,ele;
	clrscr();
	cout<<"\n Enter size of array : ";
	cin>>n;
	LIST obj(n);
	obj.SET_LIST();
	cout<<endl<<"List of elements : \n";
	obj.VIEW_LIST();
	obj.BUBBLE_SORT();
	cout<<endl<<"List of elements : \n";
	obj.VIEW_LIST();
	cout<<"\n Enter element to search : ";
	cin>>ele;
	pos = obj.BINARY_SEARCH(ele);
	if(pos !=0)
		cout<<endl<<ele<<" found at "<<pos;
	else
		cout<<endl<<ele<<" not found";
	getch();
}











